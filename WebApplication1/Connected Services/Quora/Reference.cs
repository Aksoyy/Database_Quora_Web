//------------------------------------------------------------------------------
// <auto-generated>
//     Bu kod araç tarafından oluşturuldu.
//     Çalışma Zamanı Sürümü:4.0.30319.42000
//
//     Bu dosyada yapılacak değişiklikler yanlış davranışa neden olabilir ve
//     kod yeniden oluşturulursa kaybolur.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication1.Quora {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserInfo", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    [System.SerializableAttribute()]
    public partial class UserInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NationalityTypeCdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NationalityTypeCd {
            get {
                return this.NationalityTypeCdField;
            }
            set {
                if ((object.ReferenceEquals(this.NationalityTypeCdField, value) != true)) {
                    this.NationalityTypeCdField = value;
                    this.RaisePropertyChanged("NationalityTypeCd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LanguageInfo", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    [System.SerializableAttribute()]
    public partial class LanguageInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LanguageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LanguageId {
            get {
                return this.LanguageIdField;
            }
            set {
                if ((this.LanguageIdField.Equals(value) != true)) {
                    this.LanguageIdField = value;
                    this.RaisePropertyChanged("LanguageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CategoryInfo", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    [System.SerializableAttribute()]
    public partial class CategoryInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CategoryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryId {
            get {
                return this.CategoryIdField;
            }
            set {
                if ((this.CategoryIdField.Equals(value) != true)) {
                    this.CategoryIdField = value;
                    this.RaisePropertyChanged("CategoryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QuestionInfo", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    [System.SerializableAttribute()]
    public partial class QuestionInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CategoryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LanguageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameSurnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long QuestionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UserLoginIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CategoryId {
            get {
                return this.CategoryIdField;
            }
            set {
                if ((this.CategoryIdField.Equals(value) != true)) {
                    this.CategoryIdField = value;
                    this.RaisePropertyChanged("CategoryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreationDate {
            get {
                return this.CreationDateField;
            }
            set {
                if ((this.CreationDateField.Equals(value) != true)) {
                    this.CreationDateField = value;
                    this.RaisePropertyChanged("CreationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LanguageId {
            get {
                return this.LanguageIdField;
            }
            set {
                if ((this.LanguageIdField.Equals(value) != true)) {
                    this.LanguageIdField = value;
                    this.RaisePropertyChanged("LanguageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameSurname {
            get {
                return this.NameSurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameSurnameField, value) != true)) {
                    this.NameSurnameField = value;
                    this.RaisePropertyChanged("NameSurname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long QuestionId {
            get {
                return this.QuestionIdField;
            }
            set {
                if ((this.QuestionIdField.Equals(value) != true)) {
                    this.QuestionIdField = value;
                    this.RaisePropertyChanged("QuestionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UserLoginId {
            get {
                return this.UserLoginIdField;
            }
            set {
                if ((this.UserLoginIdField.Equals(value) != true)) {
                    this.UserLoginIdField = value;
                    this.RaisePropertyChanged("UserLoginId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QuestionAnswerInfo", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    [System.SerializableAttribute()]
    public partial class QuestionAnswerInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WebApplication1.Quora.AnswerInfo[] AnswerInfoListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WebApplication1.Quora.QuestionInfo QuestionInfoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WebApplication1.Quora.AnswerInfo[] AnswerInfoList {
            get {
                return this.AnswerInfoListField;
            }
            set {
                if ((object.ReferenceEquals(this.AnswerInfoListField, value) != true)) {
                    this.AnswerInfoListField = value;
                    this.RaisePropertyChanged("AnswerInfoList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WebApplication1.Quora.QuestionInfo QuestionInfo {
            get {
                return this.QuestionInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.QuestionInfoField, value) != true)) {
                    this.QuestionInfoField = value;
                    this.RaisePropertyChanged("QuestionInfo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AnswerInfo", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    [System.SerializableAttribute()]
    public partial class AnswerInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameSurnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SortNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreationDate {
            get {
                return this.CreationDateField;
            }
            set {
                if ((this.CreationDateField.Equals(value) != true)) {
                    this.CreationDateField = value;
                    this.RaisePropertyChanged("CreationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameSurname {
            get {
                return this.NameSurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameSurnameField, value) != true)) {
                    this.NameSurnameField = value;
                    this.RaisePropertyChanged("NameSurname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SortNumber {
            get {
                return this.SortNumberField;
            }
            set {
                if ((this.SortNumberField.Equals(value) != true)) {
                    this.SortNumberField = value;
                    this.RaisePropertyChanged("SortNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Quora.IQuara")]
    public interface IQuara {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuara/Login", ReplyAction="http://tempuri.org/IQuara/LoginResponse")]
        string Login(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuara/Login", ReplyAction="http://tempuri.org/IQuara/LoginResponse")]
        System.Threading.Tasks.Task<string> LoginAsync(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuara/Logout", ReplyAction="http://tempuri.org/IQuara/LogoutResponse")]
        void Logout(string sessionKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuara/Logout", ReplyAction="http://tempuri.org/IQuara/LogoutResponse")]
        System.Threading.Tasks.Task LogoutAsync(string sessionKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuara/ChangePassword", ReplyAction="http://tempuri.org/IQuara/ChangePasswordResponse")]
        bool ChangePassword(string oldPassword, string newPassword, string sessionKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuara/ChangePassword", ReplyAction="http://tempuri.org/IQuara/ChangePasswordResponse")]
        System.Threading.Tasks.Task<bool> ChangePasswordAsync(string oldPassword, string newPassword, string sessionKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuara/RegisterUser", ReplyAction="http://tempuri.org/IQuara/RegisterUserResponse")]
        bool RegisterUser(string name, string lastName, string surname, string nationalityTypeCd, string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuara/RegisterUser", ReplyAction="http://tempuri.org/IQuara/RegisterUserResponse")]
        System.Threading.Tasks.Task<bool> RegisterUserAsync(string name, string lastName, string surname, string nationalityTypeCd, string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuara/UpdateUser", ReplyAction="http://tempuri.org/IQuara/UpdateUserResponse")]
        bool UpdateUser(string name, string lastName, string surname, string nationalityTypeCd, string sessionKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuara/UpdateUser", ReplyAction="http://tempuri.org/IQuara/UpdateUserResponse")]
        System.Threading.Tasks.Task<bool> UpdateUserAsync(string name, string lastName, string surname, string nationalityTypeCd, string sessionKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuara/GetUserInfo", ReplyAction="http://tempuri.org/IQuara/GetUserInfoResponse")]
        WebApplication1.Quora.UserInfo GetUserInfo(string sessionKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuara/GetUserInfo", ReplyAction="http://tempuri.org/IQuara/GetUserInfoResponse")]
        System.Threading.Tasks.Task<WebApplication1.Quora.UserInfo> GetUserInfoAsync(string sessionKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuara/GetUserInfoAll", ReplyAction="http://tempuri.org/IQuara/GetUserInfoAllResponse")]
        WebApplication1.Quora.UserInfo[] GetUserInfoAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuara/GetUserInfoAll", ReplyAction="http://tempuri.org/IQuara/GetUserInfoAllResponse")]
        System.Threading.Tasks.Task<WebApplication1.Quora.UserInfo[]> GetUserInfoAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuara/GetLanguageList", ReplyAction="http://tempuri.org/IQuara/GetLanguageListResponse")]
        WebApplication1.Quora.LanguageInfo[] GetLanguageList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuara/GetLanguageList", ReplyAction="http://tempuri.org/IQuara/GetLanguageListResponse")]
        System.Threading.Tasks.Task<WebApplication1.Quora.LanguageInfo[]> GetLanguageListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuara/GetCategoryList", ReplyAction="http://tempuri.org/IQuara/GetCategoryListResponse")]
        WebApplication1.Quora.CategoryInfo[] GetCategoryList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuara/GetCategoryList", ReplyAction="http://tempuri.org/IQuara/GetCategoryListResponse")]
        System.Threading.Tasks.Task<WebApplication1.Quora.CategoryInfo[]> GetCategoryListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuara/NewQuestion", ReplyAction="http://tempuri.org/IQuara/NewQuestionResponse")]
        void NewQuestion(string title, string description, System.Nullable<int> languageId, System.Nullable<int> bookmarkId, string sessionKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuara/NewQuestion", ReplyAction="http://tempuri.org/IQuara/NewQuestionResponse")]
        System.Threading.Tasks.Task NewQuestionAsync(string title, string description, System.Nullable<int> languageId, System.Nullable<int> bookmarkId, string sessionKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuara/GetTheNewests", ReplyAction="http://tempuri.org/IQuara/GetTheNewestsResponse")]
        WebApplication1.Quora.QuestionInfo[] GetTheNewests(string sessionKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuara/GetTheNewests", ReplyAction="http://tempuri.org/IQuara/GetTheNewestsResponse")]
        System.Threading.Tasks.Task<WebApplication1.Quora.QuestionInfo[]> GetTheNewestsAsync(string sessionKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuara/GetMostAnswered", ReplyAction="http://tempuri.org/IQuara/GetMostAnsweredResponse")]
        WebApplication1.Quora.QuestionInfo[] GetMostAnswered(string sessionKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuara/GetMostAnswered", ReplyAction="http://tempuri.org/IQuara/GetMostAnsweredResponse")]
        System.Threading.Tasks.Task<WebApplication1.Quora.QuestionInfo[]> GetMostAnsweredAsync(string sessionKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuara/GetMyQuestions", ReplyAction="http://tempuri.org/IQuara/GetMyQuestionsResponse")]
        WebApplication1.Quora.QuestionInfo[] GetMyQuestions(string sessionKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuara/GetMyQuestions", ReplyAction="http://tempuri.org/IQuara/GetMyQuestionsResponse")]
        System.Threading.Tasks.Task<WebApplication1.Quora.QuestionInfo[]> GetMyQuestionsAsync(string sessionKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuara/GetAnswerListByQuestionId", ReplyAction="http://tempuri.org/IQuara/GetAnswerListByQuestionIdResponse")]
        WebApplication1.Quora.QuestionAnswerInfo GetAnswerListByQuestionId(long questionId, string sessionKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuara/GetAnswerListByQuestionId", ReplyAction="http://tempuri.org/IQuara/GetAnswerListByQuestionIdResponse")]
        System.Threading.Tasks.Task<WebApplication1.Quora.QuestionAnswerInfo> GetAnswerListByQuestionIdAsync(long questionId, string sessionKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuara/AnswerByQuestionId", ReplyAction="http://tempuri.org/IQuara/AnswerByQuestionIdResponse")]
        void AnswerByQuestionId(int questionId, string description, string sessionKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuara/AnswerByQuestionId", ReplyAction="http://tempuri.org/IQuara/AnswerByQuestionIdResponse")]
        System.Threading.Tasks.Task AnswerByQuestionIdAsync(int questionId, string description, string sessionKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuara/GetQuestionListByCategoryId", ReplyAction="http://tempuri.org/IQuara/GetQuestionListByCategoryIdResponse")]
        WebApplication1.Quora.QuestionInfo[] GetQuestionListByCategoryId(long categoryId, string sessionKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuara/GetQuestionListByCategoryId", ReplyAction="http://tempuri.org/IQuara/GetQuestionListByCategoryIdResponse")]
        System.Threading.Tasks.Task<WebApplication1.Quora.QuestionInfo[]> GetQuestionListByCategoryIdAsync(long categoryId, string sessionKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuara/GetQuestionListByLanguageId", ReplyAction="http://tempuri.org/IQuara/GetQuestionListByLanguageIdResponse")]
        WebApplication1.Quora.QuestionInfo[] GetQuestionListByLanguageId(long languageId, string sessionKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuara/GetQuestionListByLanguageId", ReplyAction="http://tempuri.org/IQuara/GetQuestionListByLanguageIdResponse")]
        System.Threading.Tasks.Task<WebApplication1.Quora.QuestionInfo[]> GetQuestionListByLanguageIdAsync(long languageId, string sessionKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuara/Search", ReplyAction="http://tempuri.org/IQuara/SearchResponse")]
        WebApplication1.Quora.QuestionInfo[] Search(System.Nullable<long> categoryId, System.Nullable<long> languageId, string searchWord, string sessionKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuara/Search", ReplyAction="http://tempuri.org/IQuara/SearchResponse")]
        System.Threading.Tasks.Task<WebApplication1.Quora.QuestionInfo[]> SearchAsync(System.Nullable<long> categoryId, System.Nullable<long> languageId, string searchWord, string sessionKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuara/GetAllQuestion", ReplyAction="http://tempuri.org/IQuara/GetAllQuestionResponse")]
        WebApplication1.Quora.QuestionInfo[] GetAllQuestion();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuara/GetAllQuestion", ReplyAction="http://tempuri.org/IQuara/GetAllQuestionResponse")]
        System.Threading.Tasks.Task<WebApplication1.Quora.QuestionInfo[]> GetAllQuestionAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IQuaraChannel : WebApplication1.Quora.IQuara, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class QuaraClient : System.ServiceModel.ClientBase<WebApplication1.Quora.IQuara>, WebApplication1.Quora.IQuara {
        
        public QuaraClient() {
        }
        
        public QuaraClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public QuaraClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public QuaraClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public QuaraClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Login(string userName, string password) {
            return base.Channel.Login(userName, password);
        }
        
        public System.Threading.Tasks.Task<string> LoginAsync(string userName, string password) {
            return base.Channel.LoginAsync(userName, password);
        }
        
        public void Logout(string sessionKey) {
            base.Channel.Logout(sessionKey);
        }
        
        public System.Threading.Tasks.Task LogoutAsync(string sessionKey) {
            return base.Channel.LogoutAsync(sessionKey);
        }
        
        public bool ChangePassword(string oldPassword, string newPassword, string sessionKey) {
            return base.Channel.ChangePassword(oldPassword, newPassword, sessionKey);
        }
        
        public System.Threading.Tasks.Task<bool> ChangePasswordAsync(string oldPassword, string newPassword, string sessionKey) {
            return base.Channel.ChangePasswordAsync(oldPassword, newPassword, sessionKey);
        }
        
        public bool RegisterUser(string name, string lastName, string surname, string nationalityTypeCd, string username, string password) {
            return base.Channel.RegisterUser(name, lastName, surname, nationalityTypeCd, username, password);
        }
        
        public System.Threading.Tasks.Task<bool> RegisterUserAsync(string name, string lastName, string surname, string nationalityTypeCd, string username, string password) {
            return base.Channel.RegisterUserAsync(name, lastName, surname, nationalityTypeCd, username, password);
        }
        
        public bool UpdateUser(string name, string lastName, string surname, string nationalityTypeCd, string sessionKey) {
            return base.Channel.UpdateUser(name, lastName, surname, nationalityTypeCd, sessionKey);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateUserAsync(string name, string lastName, string surname, string nationalityTypeCd, string sessionKey) {
            return base.Channel.UpdateUserAsync(name, lastName, surname, nationalityTypeCd, sessionKey);
        }
        
        public WebApplication1.Quora.UserInfo GetUserInfo(string sessionKey) {
            return base.Channel.GetUserInfo(sessionKey);
        }
        
        public System.Threading.Tasks.Task<WebApplication1.Quora.UserInfo> GetUserInfoAsync(string sessionKey) {
            return base.Channel.GetUserInfoAsync(sessionKey);
        }
        
        public WebApplication1.Quora.UserInfo[] GetUserInfoAll() {
            return base.Channel.GetUserInfoAll();
        }
        
        public System.Threading.Tasks.Task<WebApplication1.Quora.UserInfo[]> GetUserInfoAllAsync() {
            return base.Channel.GetUserInfoAllAsync();
        }
        
        public WebApplication1.Quora.LanguageInfo[] GetLanguageList() {
            return base.Channel.GetLanguageList();
        }
        
        public System.Threading.Tasks.Task<WebApplication1.Quora.LanguageInfo[]> GetLanguageListAsync() {
            return base.Channel.GetLanguageListAsync();
        }
        
        public WebApplication1.Quora.CategoryInfo[] GetCategoryList() {
            return base.Channel.GetCategoryList();
        }
        
        public System.Threading.Tasks.Task<WebApplication1.Quora.CategoryInfo[]> GetCategoryListAsync() {
            return base.Channel.GetCategoryListAsync();
        }
        
        public void NewQuestion(string title, string description, System.Nullable<int> languageId, System.Nullable<int> bookmarkId, string sessionKey) {
            base.Channel.NewQuestion(title, description, languageId, bookmarkId, sessionKey);
        }
        
        public System.Threading.Tasks.Task NewQuestionAsync(string title, string description, System.Nullable<int> languageId, System.Nullable<int> bookmarkId, string sessionKey) {
            return base.Channel.NewQuestionAsync(title, description, languageId, bookmarkId, sessionKey);
        }
        
        public WebApplication1.Quora.QuestionInfo[] GetTheNewests(string sessionKey) {
            return base.Channel.GetTheNewests(sessionKey);
        }
        
        public System.Threading.Tasks.Task<WebApplication1.Quora.QuestionInfo[]> GetTheNewestsAsync(string sessionKey) {
            return base.Channel.GetTheNewestsAsync(sessionKey);
        }
        
        public WebApplication1.Quora.QuestionInfo[] GetMostAnswered(string sessionKey) {
            return base.Channel.GetMostAnswered(sessionKey);
        }
        
        public System.Threading.Tasks.Task<WebApplication1.Quora.QuestionInfo[]> GetMostAnsweredAsync(string sessionKey) {
            return base.Channel.GetMostAnsweredAsync(sessionKey);
        }
        
        public WebApplication1.Quora.QuestionInfo[] GetMyQuestions(string sessionKey) {
            return base.Channel.GetMyQuestions(sessionKey);
        }
        
        public System.Threading.Tasks.Task<WebApplication1.Quora.QuestionInfo[]> GetMyQuestionsAsync(string sessionKey) {
            return base.Channel.GetMyQuestionsAsync(sessionKey);
        }
        
        public WebApplication1.Quora.QuestionAnswerInfo GetAnswerListByQuestionId(long questionId, string sessionKey) {
            return base.Channel.GetAnswerListByQuestionId(questionId, sessionKey);
        }
        
        public System.Threading.Tasks.Task<WebApplication1.Quora.QuestionAnswerInfo> GetAnswerListByQuestionIdAsync(long questionId, string sessionKey) {
            return base.Channel.GetAnswerListByQuestionIdAsync(questionId, sessionKey);
        }
        
        public void AnswerByQuestionId(int questionId, string description, string sessionKey) {
            base.Channel.AnswerByQuestionId(questionId, description, sessionKey);
        }
        
        public System.Threading.Tasks.Task AnswerByQuestionIdAsync(int questionId, string description, string sessionKey) {
            return base.Channel.AnswerByQuestionIdAsync(questionId, description, sessionKey);
        }
        
        public WebApplication1.Quora.QuestionInfo[] GetQuestionListByCategoryId(long categoryId, string sessionKey) {
            return base.Channel.GetQuestionListByCategoryId(categoryId, sessionKey);
        }
        
        public System.Threading.Tasks.Task<WebApplication1.Quora.QuestionInfo[]> GetQuestionListByCategoryIdAsync(long categoryId, string sessionKey) {
            return base.Channel.GetQuestionListByCategoryIdAsync(categoryId, sessionKey);
        }
        
        public WebApplication1.Quora.QuestionInfo[] GetQuestionListByLanguageId(long languageId, string sessionKey) {
            return base.Channel.GetQuestionListByLanguageId(languageId, sessionKey);
        }
        
        public System.Threading.Tasks.Task<WebApplication1.Quora.QuestionInfo[]> GetQuestionListByLanguageIdAsync(long languageId, string sessionKey) {
            return base.Channel.GetQuestionListByLanguageIdAsync(languageId, sessionKey);
        }
        
        public WebApplication1.Quora.QuestionInfo[] Search(System.Nullable<long> categoryId, System.Nullable<long> languageId, string searchWord, string sessionKey) {
            return base.Channel.Search(categoryId, languageId, searchWord, sessionKey);
        }
        
        public System.Threading.Tasks.Task<WebApplication1.Quora.QuestionInfo[]> SearchAsync(System.Nullable<long> categoryId, System.Nullable<long> languageId, string searchWord, string sessionKey) {
            return base.Channel.SearchAsync(categoryId, languageId, searchWord, sessionKey);
        }
        
        public WebApplication1.Quora.QuestionInfo[] GetAllQuestion() {
            return base.Channel.GetAllQuestion();
        }
        
        public System.Threading.Tasks.Task<WebApplication1.Quora.QuestionInfo[]> GetAllQuestionAsync() {
            return base.Channel.GetAllQuestionAsync();
        }
    }
}
